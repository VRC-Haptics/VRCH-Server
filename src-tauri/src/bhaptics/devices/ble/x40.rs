use super::bHapticDevice;

use crate::util::math::Vec3;
use crate::mapping::NodeGroup;
use crate::mapping::haptic_node::HapticNode;

pub fn x40_ble_device() -> bHapticDevice {
    // Original coordinates, unchanged
    const RAW_NODES: [Vec3; 40] = [
        // ------------ FRONT ------------
        // row 0 (front, left → right)
        Vec3::new(-0.151099995, 1.28999996, 0.0763999969),
        Vec3::new(-0.050999999, 1.28999996, 0.101000004),
        Vec3::new( 0.050999999, 1.28999996, 0.101000004),
        Vec3::new( 0.151099995, 1.28999996, 0.0763999969),
        // row 1
        Vec3::new(-0.1426,      1.19000006, 0.0590000004),
        Vec3::new(-0.048999999, 1.19000006, 0.115699999 ),
        Vec3::new( 0.048999999, 1.19000006, 0.115699999 ),
        Vec3::new( 0.1426,      1.19000006, 0.0590000004),
        // row 2
        Vec3::new(-0.1331,      1.10500002, 0.0491999984),
        Vec3::new(-0.048099995, 1.10500002, 0.121200003 ),
        Vec3::new( 0.048099995, 1.10500002, 0.121200003 ),
        Vec3::new( 0.1331,      1.10500002, 0.0491999984),
        // row 3
        Vec3::new(-0.1331,      1.01999998, 0.0491999984),
        Vec3::new(-0.048099995, 1.01999998, 0.114200003 ),
        Vec3::new( 0.048099995, 1.01999998, 0.114200003 ),
        Vec3::new( 0.1331,      1.01999998, 0.0491999984),
        // row 4
        Vec3::new(-0.14,        0.926999986, 0.0579999983),
        Vec3::new(-0.050999999, 0.926999986, 0.093999997 ),
        Vec3::new( 0.050999999, 0.926999986, 0.093999997 ),
        Vec3::new( 0.14,        0.926999986, 0.0579999983),

        // ------------- BACK -------------
        // row 0 (back, left → right)
        Vec3::new(-0.151899993, 1.28999996, -0.126199991),
        Vec3::new(-0.050999999, 1.28999996, -0.126199991),
        Vec3::new( 0.050999999, 1.28999996, -0.126199991),
        Vec3::new( 0.151899993, 1.28999996, -0.126199991),
        // row 1
        Vec3::new(-0.1426,      1.19000006, -0.0900000036),
        Vec3::new(-0.048999999, 1.19000006, -0.111500002 ),
        Vec3::new( 0.048999999, 1.19000006, -0.111500002 ),
        Vec3::new( 0.1426,      1.19000006, -0.0900000036),
        // row 2
        Vec3::new(-0.1331,      1.10500002, -0.067000002 ),
        Vec3::new(-0.048099995, 1.10500002, -0.106       ),
        Vec3::new( 0.048099995, 1.10500002, -0.106       ),
        Vec3::new( 0.1331,      1.10500002, -0.067000002 ),
        // row 3
        Vec3::new(-0.1331,      1.01999998, -0.048       ),
        Vec3::new(-0.048099995, 1.01999998, -0.080999993 ),
        Vec3::new( 0.048099995, 1.01999998, -0.080999993 ),
        Vec3::new( 0.1331,      1.01999998, -0.048       ),
        // row 4
        Vec3::new(-0.14,        0.940999985, -0.053000003),
        Vec3::new(-0.050999999, 0.940999985, -0.092000008),
        Vec3::new( 0.050999999, 0.940999985, -0.092000008),
        Vec3::new( 0.14,        0.940999985, -0.053       ),
    ];

    // Map each Vec3 to a HapticNode with two tags
    let nodes = RAW_NODES.into_iter()
        .map(|p| {
            let mut groups = Vec::with_capacity(2);
            groups.push(if p.z >= 0.0 {
                NodeGroup::TorsoFront
            } else {
                NodeGroup::TorsoBack
            });
            groups.push(if p.x < 0.0 {
                NodeGroup::TorsoLeft
            } else {
                NodeGroup::TorsoRight
            });
            HapticNode::new(p, groups)
        })
        .collect();

    bHapticDevice {
        ble_name: "TactSuitX40".to_owned(),
        nodes,
    }
}